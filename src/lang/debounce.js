/**
 * @file 函数防抖
 * @author sheldon<websheldoncui@gmail.com>
 * @desc 顾名思义, 防止函数被过快地连续触发. 防抖采取的方案是太快的话，在我的时间节奏之内如果你触发很多次，无论你触发多少次我只以你最后触发的那一次来触发.
 * @desc 节流的话也是防止函数被过快连续触发。但节流采取的策略是: 你触发太快的话，我还是按我的节奏来触发，可能你触发很多次的时候才到达我的某次节奏。
 * @desc 比喻: 上电梯时如果不断的有人(事件)进来，我电梯门就一直会等待，直到没人进来；而不会上来一个人就开始上楼。这叫防抖
 * @desc 比喻: 流水发车的车站，半小时走一趟车。半小时之内有多少人(事件)进来，车也只在半小时到了的时候才发出，不会让每个人上车就发车. 这叫节流。
 */


